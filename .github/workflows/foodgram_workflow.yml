name: foodgram_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt

      - name: Test with flake8
        run: |
          python -m flake8

  

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: contains('refs/heads/main
                  refs/heads/master
                  ', github.ref)
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.USERNAME }}/foodgram:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SECRET_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          stack_file_name: docker-compose.yaml
          script: |
            sudo docker pull ${{ secrets.USERNAME }}/foodgram
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker-compose rm web
            sudo touch .env
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo echo SECRET_KEY="${{ secrets.PROJECT_SECRET_KEY }}" >> .env
            sudo echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            sudo echo DEBUG=${{ secrets.DEBUG }} >> .env
            sudo docker-compose up -d

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@master
      - name: send custom message with args
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: Проект был успешно развёрнут на сервере
